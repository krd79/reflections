When would you want to use a remote repository rather than keeping all your work
local?

   If you are collaborating with other developers or if you are showing your
   demoing your code to others who are remotely located.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

   The state of the remote repository may include commits which you 
   aren't ready to introduce to your local repository. A manual pull
   is better as you can time when exactly you choose to pull the commits
   into your master branch.
   
Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

   The difference between the three is that a fork will copy a repository hosted
   on the GitHub servers to a new repository within your own account on the same
   GitHub server i.e. the repositories are all hosted remotely on GitHub servers.
   A clone will copy a repository from a remote location to a copy on a local computer 
   or can clone from a local repository to a new repository hosted locally also. A 
   branch is just path coming from the master branch within one repository. Here 
   a branch will have different parents for its commits than for those commits on
   the master branch.   

What is the benefit of having a copy of the last known state of the remote
stored locally?

   

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?
